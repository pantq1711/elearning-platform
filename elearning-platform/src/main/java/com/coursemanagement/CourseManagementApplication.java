package com.coursemanagement;

import com.coursemanagement.entity.Category;
import com.coursemanagement.entity.User;
import com.coursemanagement.service.CategoryService;
import com.coursemanagement.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.security.crypto.password.PasswordEncoder;

/**
 * Main class ƒë·ªÉ kh·ªüi ƒë·ªông ·ª©ng d·ª•ng Course Management System
 * T·ª± ƒë·ªông t·∫°o d·ªØ li·ªáu m·∫∑c ƒë·ªãnh khi kh·ªüi ƒë·ªông
 */
@SpringBootApplication
public class CourseManagementApplication implements CommandLineRunner {

    @Autowired
    private UserService userService;

    @Autowired
    private CategoryService categoryService;

    @Autowired
    private PasswordEncoder passwordEncoder;

    public static void main(String[] args) {
        SpringApplication.run(CourseManagementApplication.class, args);
    }

    /**
     * Ch·∫°y c√°c initialization tasks sau khi application start
     * @param args Command line arguments
     * @throws Exception N·∫øu c√≥ l·ªói initialization
     */
    @Override
    public void run(String... args) throws Exception {
        System.out.println("üöÄ Course Management System ƒëang kh·ªüi ƒë·ªông...");

        createDefaultAdminIfNotExists();
        createDefaultCategoriesIfNotExists();

        System.out.println("‚úÖ Kh·ªüi t·∫°o d·ªØ li·ªáu m·∫∑c ƒë·ªãnh ho√†n t·∫•t!");
    }

    /**
     * T·∫°o admin user m·∫∑c ƒë·ªãnh n·∫øu ch∆∞a t·ªìn t·∫°i
     */
    private void createDefaultAdminIfNotExists() {
        try {
            // Ki·ªÉm tra xem ƒë√£ c√≥ admin ch∆∞a
            if (userService.countByRole(User.Role.ADMIN) == 0) {
                System.out.println("üìù T·∫°o admin user m·∫∑c ƒë·ªãnh...");

                User admin = new User();
                admin.setUsername("admin");
                admin.setEmail("admin@coursemanagement.com");
                admin.setFullName("Administrator");
                admin.setPassword("admin123"); // Will be encoded
                admin.setRole(User.Role.ADMIN);
                admin.setActive(true);
                admin.setBio("Administrator c·ªßa h·ªá th·ªëng Course Management");

                userService.registerUser(admin);
                System.out.println("‚úÖ ƒê√£ t·∫°o admin user: admin/admin123");
            }

            // T·∫°o instructor demo n·∫øu ch∆∞a c√≥
            if (userService.countByRole(User.Role.INSTRUCTOR) == 0) {
                System.out.println("üìù T·∫°o instructor demo...");

                User instructor = new User();
                instructor.setUsername("instructor");
                instructor.setEmail("instructor@coursemanagement.com");
                instructor.setFullName("Gi·∫£ng vi√™n Demo");
                instructor.setPassword("instructor123");
                instructor.setRole(User.Role.INSTRUCTOR);
                instructor.setActive(true);
                instructor.setBio("Gi·∫£ng vi√™n demo c·ªßa h·ªá th·ªëng");

                userService.registerUser(instructor);
                System.out.println("‚úÖ ƒê√£ t·∫°o instructor user: instructor/instructor123");
            }

            // T·∫°o student demo n·∫øu ch∆∞a c√≥
            if (userService.countByRole(User.Role.STUDENT) == 0) {
                System.out.println("üìù T·∫°o student demo...");

                User student = new User();
                student.setUsername("student");
                student.setEmail("student@coursemanagement.com");
                student.setFullName("H·ªçc vi√™n Demo");
                student.setPassword("student123");
                student.setRole(User.Role.STUDENT);
                student.setActive(true);
                student.setBio("H·ªçc vi√™n demo c·ªßa h·ªá th·ªëng");

                userService.registerUser(student);
                System.out.println("‚úÖ ƒê√£ t·∫°o student user: student/student123");
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói t·∫°o default users: " + e.getMessage());
        }
    }

    /**
     * T·∫°o c√°c category m·∫∑c ƒë·ªãnh n·∫øu ch∆∞a t·ªìn t·∫°i
     */
    private void createDefaultCategoriesIfNotExists() {
        try {
            if (categoryService.countAllCategories() == 0) {
                System.out.println("üìù T·∫°o categories m·∫∑c ƒë·ªãnh...");

                // Danh s√°ch categories m·∫∑c ƒë·ªãnh
                String[][] defaultCategories = {
                        {"L·∫≠p tr√¨nh", "C√°c kh√≥a h·ªçc v·ªÅ l·∫≠p tr√¨nh v√† ph√°t tri·ªÉn ph·∫ßn m·ªÅm"},
                        {"Thi·∫øt k·∫ø", "C√°c kh√≥a h·ªçc v·ªÅ thi·∫øt k·∫ø ƒë·ªì h·ªça v√† UI/UX"},
                        {"Marketing", "C√°c kh√≥a h·ªçc v·ªÅ marketing v√† kinh doanh"},
                        {"Ngo·∫°i ng·ªØ", "C√°c kh√≥a h·ªçc ngo·∫°i ng·ªØ"},
                        {"C√¥ng ngh·ªá th√¥ng tin", "C√°c kh√≥a h·ªçc v·ªÅ IT v√† c√¥ng ngh·ªá"},
                        {"K·ªπ nƒÉng m·ªÅm", "C√°c kh√≥a h·ªçc ph√°t tri·ªÉn k·ªπ nƒÉng c√° nh√¢n"},
                        {"Khoa h·ªçc d·ªØ li·ªáu", "C√°c kh√≥a h·ªçc v·ªÅ Data Science v√† AI"},
                        {"Nhi·∫øp ·∫£nh", "C√°c kh√≥a h·ªçc v·ªÅ nhi·∫øp ·∫£nh v√† quay phim"}
                };

                for (String[] categoryData : defaultCategories) {
                    Category category = new Category();
                    category.setName(categoryData[0]);
                    category.setDescription(categoryData[1]);

                    // Set featured cho m·ªôt s·ªë category
                    category.setFeatured(categoryData[0].equals("L·∫≠p tr√¨nh") ||
                            categoryData[0].equals("Thi·∫øt k·∫ø") ||
                            categoryData[0].equals("Khoa h·ªçc d·ªØ li·ªáu"));

                    categoryService.createCategory(category);
                    System.out.println("‚úÖ ƒê√£ t·∫°o category: " + categoryData[0]);
                }

                System.out.println("‚úÖ ƒê√£ t·∫°o " + defaultCategories.length + " categories m·∫∑c ƒë·ªãnh");
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói t·∫°o default categories: " + e.getMessage());
        }
    }
}